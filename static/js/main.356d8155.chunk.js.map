{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services/userServeces.ts","components/TodoList/TodoList.tsx","App.tsx","services/todosServices.ts","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","setTitle","todoTitleError","setTodoTitleError","setUserId","userIdError","setUserIdError","action","method","onSubmit","e","preventDefault","newTodoId","Math","max","getMaxTodosId","newTodo","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.356d8155.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user:User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport getUserById from '../../services/userServeces';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport default function getUserById(userId:number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport getMaxTodosId from './services/todosServices';\n\nexport const App = () => {\n  const [todos, setTodos] = useState([...todosFromServer]);\n\n  const [title, setTitle] = useState('');\n  const [todoTitleError, setTodoTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const resetTodoForm = () => {\n    setTitle('');\n    setTodoTitleError(false);\n    setUserId(0);\n    setUserIdError(false);\n  };\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setUserIdError(userId === 0);\n    setTodoTitleError(title === '');\n\n    if (userId !== 0 && title !== '') {\n      const newTodoId = getMaxTodosId(todos);\n      const newTodo = {\n        id: newTodoId + 1,\n        completed: false,\n        title,\n        userId,\n      };\n\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n      resetTodoForm();\n    }\n  };\n\n  const handleUserIdChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserIdError(false);\n  };\n\n  const todoTitleHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setTodoTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={onFormSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"todo-title\">Title:</label>\n          <input\n            id=\"todo-title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={todoTitleHandler}\n          />\n          {todoTitleError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"todo-user-id\">User:</label>\n          <select\n            id=\"todo-user-id\"\n            data-cy=\"userSelect\"\n            onChange={handleUserIdChange}\n            value={userId}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map((user) => {\n              return (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              );\n            })}\n          </select>\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport default function getMaxTodosId(todos:Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}